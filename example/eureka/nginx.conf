lua_package_path "/usr/local/openresty/lualib/?.lua;;";
lua_package_cpath "/usr/local/openresty/lualib/?.so;;";

lua_shared_dict upstream_list 10m;

# 第一次初始化
init_by_lua_block {
    local eureka = require "eureka";
    eureka.init({
        upstream_list = ngx.shared.upstream_list,
        base_url = "http://192.168.9.252:8761",
        path = "/eureka/apps/demo",

    });
}

# 定时拉取配置
init_worker_by_lua_block {
    local eureka = require "eureka";
    local handle = nil;

    handle = function ()
        --TODO:控制每次只有一个worker执行
        eureka.get_server_list();
        ngx.timer.at(5, handle);
    end
    ngx.timer.at(5, handle);
}

upstream api_server {
    server 0.0.0.1 down; #占位server

    balancer_by_lua_block {
        local balancer = require "ngx.balancer";
        local eureka = require "eureka";
        local tmp_upstreams = eureka.get_upstreams();
        local ip_port = tmp_upstreams[math.random(1, table.getn(tmp_upstreams))];
        balancer.set_current_peer(ip_port.ip, ip_port.port);
    }
}

server {
    listen       12000;
    server_name  localhost;
    charset utf-8;
    location / {
         proxy_pass http://api_server;
    }
}